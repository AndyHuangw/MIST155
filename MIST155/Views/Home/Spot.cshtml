@{
    ViewData["Title"] = "Spot";
}

<h1>台北市景點</h1>
<div class="row">
    <div class="col-3">
        <select class="form-select" aria-label="Default select example" id="sopage">
            <option value="0">每頁顯示9筆資料</option>
            <option value="1">每頁顯示1筆資料</option>
            <option value="3">每頁顯示3筆資料</option>
            <option value="6">每頁顯示6筆資料</option>
        </select>
    </div>
    <div class="col-4">
        <nav aria-label="Page navigation example">
            <ul class="pagination" id="ul1">
            </ul>
        </nav>
    </div>
    <div class="col-2">
        <select class="form-select" aria-label="Default select example" id="stchange">
            <option value="0">景點編號升冪</option>
            <option value="1">景點編號降冪</option>
        </select>
    </div>
    <div class="col-3">
        <input type="search" class="form-control" placeholder="景點搜尋" id="inputKeyword" />
    </div>
</div>
<div class="row justify-content-center">
    <div class="btn-group" role="group" aria-label="Basic outlined example" id="categorycg">
    </div>
</div>
<div class="row row-cols-1 row-cols-md-3 g-4" id="div1">
</div>

@section Scripts {
    <script>
        // 預設的搜尋資料
        const div1 = document.querySelector("#div1")
        const ulPaging = document.querySelector('#ul1');
        const inpKeyword = document.querySelector('#inputKeyword');
        const sopage = document.querySelector('#sopage')
        const stchange = document.querySelector('#stchange')
        const categorycg = document.querySelector('#categorycg')
        const searchData = {
            "categoryId": 0,
            "keyword": "",
            "page": 1,
            "pageSize": 9,
            "sortType": "",
            "sortBy": ""
        }
        // 定義一個異步函數，用於載入景點數據
        const loadSpots = async () => {
            // 使用 fetch 函數發送 POST 請求到指定的 API 端點
            const response = await fetch('@Url.Content("~/api/spot")', {
                "method": "POST", // 指定請求方法為 POST
                "body": JSON.stringify(searchData),// 將搜尋資料轉換為 JSON 字串作為請求主體
                "headers": { "Content-Type": "application/json" } // 指定請求headers的 Content-Type 為 application/json
            });
            // 解析從伺服器返回的 JSON 數據
            const datas = await response.json();
            console.log(datas)
            const divSpots = datas.spotsResult.map(spot => {
                const { spotId, spotTitle, address, spotDescription, spotImage } = spot;
                return (`<div class="col">
                                    <div class="card h-100">
                                                      <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                                      <div class="card-body">
                                                        <h5 class="card-title">${spotTitle}</h5>
                                                                        <p class="card-text">${spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100)}</p>
                                      </div>
                                      <div class="card-footer">
                                                <small class="text-body-secondary">${address}</small>
                                      </div>
                                    </div>
                                  </div>`)
            });
            div1.innerHTML = divSpots.join("");
            //種類選擇按鈕
            // const catingHandler = categoryId => {
            //     // searchData.categoryId = categoryId;
            //     // loadSpots();
            //     console.log(categoryId)
            // }
            const divcate = datas.cateResult.map(cate => {
                const { categoryId, categoryName } = cate;

                return (`<button type="button" class="btn btn-outline-primary" onclick="catingHandler(${categoryId})">${categoryName}</button>`)
            });
            console.log(divcate)
            // console.log(divcate)
            categorycg.innerHTML = divcate.join("");
            //種類按鈕顯示
            
            console.log(catingHandler)
            //選擇顯示幾筆資料
            sopage.addEventListener('change', function () {
                const selectedValue = sopage.value;
                switch (selectedValue) {
                    case '0':
                        searchData.pageSize = 9;
                        break;
                    case '1':
                        searchData.pageSize = 1;
                        break;
                    case '3':
                        searchData.pageSize = 3;
                        break;
                    case '6':
                        searchData.pageSize = 6;
                        break;
                    default:

                        break;
                }
                loadSpots();
            })
            //更改升冪降冪
            stchange.addEventListener('change', function () {
                const selectedValue = stchange.value;
                switch (selectedValue) {
                    case '0':
                        searchData.sortType = "asc";
                        break;
                    case '1':
                        searchData.sortType = "desc";
                        break;
                }
                loadSpots();
            })

            let liPaging = "";
            for (let i = 1, max = datas.totalPages; i <= max; i++) {
                liPaging += ` <li class="page-item" onclick="pagingHandler(${i})"><a class="page-link" href="#">${i}</a></li>`
            }
            ulPaging.innerHTML = liPaging;

        }
        const pagingHandler = page => {
            searchData.page = page;
            loadSpots();          
        }
        console.log(pagingHandler)
        //關鍵字搜尋
        inpKeyword.addEventListener('keydown', event => {
            // console.log(event.which); //Enter => 13
            if (event.which === 13) {
                searchData.keyword = event.target.value;
                searchData.page = 1;
                loadSpots();
            }
        })
        loadSpots();


        const catingHandler = categoryId => {
            searchData.categoryId = categoryId;
            loadSpots();
            // console.log(categoryId)
        }

    </script>
}

